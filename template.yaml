AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Roblox Downloader - Daily APK Download to S3 using ECS Fargate

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Deployment stage (dev, test, prod)
    AllowedValues:
      - dev
      - test
      - prod
  
  BucketName:
    Type: String
    Default: roblox
    Description: Base name for the S3 bucket
  
  ScheduleExpression:
    Type: String
    Default: "cron(0 12 * * ? *)"
    Description: "Schedule for ECS task execution (default: daily at 12:00 UTC)"

Resources:
  # S3 Bucket for Roblox APKs
  RobloxBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${BucketName}-${AWS::AccountId}-${Stage}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: 30
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
          - Id: TransitionOldVersionsToIA
            Status: Enabled
            Prefix: apk/
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 90
      Tags:
        - Key: Name
          Value: !Sub "${BucketName}-${Stage}"
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # ECS Cluster
  RobloxDownloaderCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "roblox-downloader-${Stage}"
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # CloudWatch Log Group for ECS
  RobloxDownloaderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/roblox-downloader-${Stage}"
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # Note: ECR Repository is created by the Makefile during docker push
  # This keeps build artifacts separate from runtime infrastructure

  # IAM Role for ECS Task Execution (pulling images, logs)
  RobloxDownloaderExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "RobloxDownloaderExecutionRole-${Stage}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/roblox-downloader-${Stage}"
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # IAM Role for ECS Task (S3, SSM access)
  RobloxDownloaderTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "RobloxDownloaderTaskRole-${Stage}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:HeadObject
                Resource:
                  - !GetAtt RobloxBucket.Arn
                  - !Sub "${RobloxBucket.Arn}/*"
        - PolicyName: SSMParameterAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:PutParameter
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/guardiangamer/${Stage}/roblox/*"
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # ECS Task Definition
  RobloxDownloaderTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "roblox-downloader-${Stage}"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: '2048'
      Memory: '4096'
      ExecutionRoleArn: !GetAtt RobloxDownloaderExecutionRole.Arn
      TaskRoleArn: !GetAtt RobloxDownloaderTaskRole.Arn
      ContainerDefinitions:
        - Name: roblox-downloader
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/roblox-downloader-${Stage}:latest"
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref RobloxDownloaderLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: STAGE
              Value: !Ref Stage
            - Name: BUCKET_NAME
              Value: !Ref RobloxBucket
            - Name: S3_PREFIX
              Value: "apk/"
            - Name: HEADLESS
              Value: "false"
            - Name: ACTION
              Value: "download"
            - Name: EXTRACT
              Value: "true"
            - Name: FORCE
              Value: "false"
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # IAM Role for EventBridge to run ECS tasks
  RobloxDownloaderEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "RobloxDownloaderEventRole-${Stage}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RunECSTask
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                Resource: !Ref RobloxDownloaderTaskDefinition
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt RobloxDownloaderExecutionRole.Arn
                  - !GetAtt RobloxDownloaderTaskRole.Arn
      Tags:
        - Key: Environment
          Value: !Ref Stage
        - Key: Project
          Value: roblox-downloader

  # EventBridge Rule for daily execution
  RobloxDownloaderSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "roblox-downloader-schedule-${Stage}"
      Description: Daily schedule to download latest Roblox APK
      ScheduleExpression: !Ref ScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !GetAtt RobloxDownloaderCluster.Arn
          RoleArn: !GetAtt RobloxDownloaderEventRole.Arn
          Id: RobloxDownloaderTarget
          EcsParameters:
            TaskDefinitionArn: !Ref RobloxDownloaderTaskDefinition
            TaskCount: 1
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets:
                  - !Ref PublicSubnet1
                  - !Ref PublicSubnet2
                SecurityGroups:
                  - !Ref RobloxDownloaderSecurityGroup

  # VPC for ECS Tasks
  RobloxDownloaderVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-vpc-${Stage}"
        - Key: Environment
          Value: !Ref Stage

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-igw-${Stage}"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RobloxDownloaderVPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RobloxDownloaderVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-public-1-${Stage}"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RobloxDownloaderVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-public-2-${Stage}"

  # Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RobloxDownloaderVPC
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-public-rt-${Stage}"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Security Group for ECS Tasks
  RobloxDownloaderSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "roblox-downloader-sg-${Stage}"
      GroupDescription: Security group for Roblox downloader ECS tasks
      VpcId: !Ref RobloxDownloaderVPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub "roblox-downloader-sg-${Stage}"
        - Key: Environment
          Value: !Ref Stage

  # SSM Parameters
  RobloxBucketNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/guardiangamer/${Stage}/roblox/bucket-name"
      Type: String
      Value: !Ref RobloxBucket
      Description: !Sub "S3 bucket name for Roblox APKs in ${Stage} environment"
      Tags:
        Stage: !Ref Stage
        Project: roblox-downloader

  RobloxBucketArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/guardiangamer/${Stage}/roblox/bucket-arn"
      Type: String
      Value: !GetAtt RobloxBucket.Arn
      Description: !Sub "S3 bucket ARN for Roblox APKs in ${Stage} environment"
      Tags:
        Stage: !Ref Stage
        Project: roblox-downloader

  RobloxBucketUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/guardiangamer/${Stage}/roblox/bucket-url"
      Type: String
      Value: !Sub "s3://${RobloxBucket}/apk"
      Description: !Sub "S3 bucket URL for Roblox APKs (organized by version: /apk/{version}/) in ${Stage} environment"
      Tags:
        Stage: !Ref Stage
        Project: roblox-downloader

  RobloxBucketRegionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/guardiangamer/${Stage}/roblox/bucket-region"
      Type: String
      Value: !Ref AWS::Region
      Description: !Sub "AWS region for Roblox S3 bucket in ${Stage} environment"
      Tags:
        Stage: !Ref Stage
        Project: roblox-downloader

  RobloxCurrentVersionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/guardiangamer/${Stage}/roblox/current-version"
      Type: String
      Value: "0.0.0"
      Description: !Sub "Current downloaded Roblox version in ${Stage} environment"
      Tags:
        Stage: !Ref Stage
        Project: roblox-downloader

Outputs:
  BucketName:
    Description: Name of the S3 bucket for Roblox APKs
    Value: !Ref RobloxBucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"
  
  BucketArn:
    Description: ARN of the S3 bucket
    Value: !GetAtt RobloxBucket.Arn
    Export:
      Name: !Sub "${AWS::StackName}-BucketArn"
  
  BucketApkUrl:
    Description: S3 URL for APK directory
    Value: !Sub "s3://${RobloxBucket}/apk"
    Export:
      Name: !Sub "${AWS::StackName}-BucketApkUrl"
  
  ECSClusterName:
    Description: Name of the ECS cluster
    Value: !Ref RobloxDownloaderCluster
    Export:
      Name: !Sub "${AWS::StackName}-ECSClusterName"
  
  ECSTaskDefinitionArn:
    Description: ARN of the ECS task definition
    Value: !Ref RobloxDownloaderTaskDefinition
    Export:
      Name: !Sub "${AWS::StackName}-ECSTaskDefinitionArn"
  
  ECRRepositoryUri:
    Description: URI of the ECR repository (created by Makefile)
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/roblox-downloader-${Stage}"
    Export:
      Name: !Sub "${AWS::StackName}-ECRRepositoryUri"
  
  LogGroupName:
    Description: Name of the CloudWatch Log Group
    Value: !Ref RobloxDownloaderLogGroup
    Export:
      Name: !Sub "${AWS::StackName}-LogGroupName"
  
  ScheduleName:
    Description: Name of the EventBridge schedule
    Value: !Ref RobloxDownloaderSchedule
    Export:
      Name: !Sub "${AWS::StackName}-ScheduleName"
  
  SSMParameterPath:
    Description: Base SSM parameter path for Roblox downloader
    Value: !Sub "/guardiangamer/${Stage}/roblox"
    Export:
      Name: !Sub "${AWS::StackName}-SSMParameterPath"